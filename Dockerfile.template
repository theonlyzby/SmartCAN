# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: http://docs.resin.io/deployment/docker-templates/
# and about resin base images here: http://docs.resin.io/runtime/resin-base-images/
# Note the node:slim image doesn't have node-gyp
# FROM resin/%%RESIN_MACHINE_NAME%%-raspbian:latest
# FROM resin/rpi-raspbian:stretch
# FROM resin/resin/raspberrypi3-debian:stretch
FROM resin/raspberrypi3-debian:stretch

# use apt-get if you need to install dependencies,
# Error on: pi-bluetooth raspberrypi-sys-mods raspi-config rpi-update
RUN apt-get update -y && apt-get upgrade -y && apt-get dist-upgrade -y && apt-get install -y debconf-utils

# Default mysql password
RUN echo 'mariadb-server-10.1 mysql-server/root_password password SmartCAN' | debconf-set-selections  \
		&& echo 'mariadb-server-10.1 mysql-server/root_password_again password SmartCAN' | debconf-set-selections
  
# Install MySQL Server package
RUN apt-get install -y mariadb-server-10.1 
# Configure DB to persistent /data folder
RUN sed -i -e "s@^datadir.*@datadir = /data/mysql@" /etc/mysql/my.cnf
RUN sed -i -e "s@^datadir.*@datadir = /data/mysql@" /etc/mysql/mariadb.conf.d/50-server.cnf

# Install all other required packages
RUN apt-get install -yq mariadb-client-10.1 mariadb-common libpcre3-dev \
 zlib1g zlib1g-dev openssl libssl1.0-dev wget cron sudo \
 firmware-brcm80211 wpasupplicant sudo make gcc libpcre3 php7.0 \
 php7.0-curl php7.0-gd php7.0-fpm php7.0-cli php7.0-opcache php7.0-mysqli php7.0-xml php7.0-mbstring ntp \
 samba samba-common-bin wiringpi

#  Clean-up apt-get
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

#Install Openresty
RUN cd /opt
RUN wget https://openresty.org/download/openresty-1.11.2.5.tar.gz
RUN wget https://github.com/slact/nginx_http_push_module/archive/v0.99.16.tar.gz
RUN tar xzvf openresty-1.11.2.5.tar.gz
RUN tar xzvf v0.99.16.tar.gz
RUN cd ./openresty-1.11.2.5 && ./configure --prefix=/usr/local --conf-path=/usr/local/nginx/conf/nginx.conf \
    --add-module=../nchan-0.99.16 \
    --with-cc-opt="-I/usr/local/include" --with-ld-opt="-L/usr/local/lib" --with-pcre-jit --with-http_secure_link_module \
    --without-http_gzip_module --with-http_ssl_module && make && sudo make install

RUN rm openresty-1.11.2.5.tar.gz
RUN rm  v0.99.16.tar.gz
RUN rm -R openresty-1.11.2.5
RUN rm -R nchan-0.99.16
# Defines our working directory in container
WORKDIR /

# Copy GitHub Files
# This will copy all files from our root to the working  directory in the container
COPY . .

# Move config files
# RUN mv /var/config-files/* /*

# Configure and start Samba
RUN pdbedit -i smbpasswd:/opt/samba-users.smbback

# Enable Required Services
RUN systemctl enable cron
RUN systemctl enable php7.0-fpm
RUN chmod +x /etc/init.d/domocan-monitor
RUN chmod +x /etc/init.d/domocan-init
RUN systemctl enable domocan-init

# Enable systemd init system in container
#ENV INITSYSTEM on

# Initiate crontab
RUN crontab /opt/crontab
#RUN cat /opt/crontab | crontab

# Starts up the Docker on the device
CMD [ "bash" , "/opt/start.sh"]
